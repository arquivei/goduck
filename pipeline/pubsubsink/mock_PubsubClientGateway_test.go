// Code generated by mockery v2.14.0. DO NOT EDIT.

package pubsubsink

import mock "github.com/stretchr/testify/mock"

// MockPubsubClientGateway is an autogenerated mock type for the PubsubClientGateway type
type MockPubsubClientGateway struct {
	mock.Mock
}

type MockPubsubClientGateway_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPubsubClientGateway) EXPECT() *MockPubsubClientGateway_Expecter {
	return &MockPubsubClientGateway_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with given fields:
func (_m *MockPubsubClientGateway) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockPubsubClientGateway_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type MockPubsubClientGateway_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *MockPubsubClientGateway_Expecter) Close() *MockPubsubClientGateway_Close_Call {
	return &MockPubsubClientGateway_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *MockPubsubClientGateway_Close_Call) Run(run func()) *MockPubsubClientGateway_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPubsubClientGateway_Close_Call) Return(_a0 error) *MockPubsubClientGateway_Close_Call {
	_c.Call.Return(_a0)
	return _c
}

// Topic provides a mock function with given fields: name
func (_m *MockPubsubClientGateway) Topic(name string) TopicGateway {
	ret := _m.Called(name)

	var r0 TopicGateway
	if rf, ok := ret.Get(0).(func(string) TopicGateway); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(TopicGateway)
		}
	}

	return r0
}

// MockPubsubClientGateway_Topic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Topic'
type MockPubsubClientGateway_Topic_Call struct {
	*mock.Call
}

// Topic is a helper method to define mock.On call
//  - name string
func (_e *MockPubsubClientGateway_Expecter) Topic(name interface{}) *MockPubsubClientGateway_Topic_Call {
	return &MockPubsubClientGateway_Topic_Call{Call: _e.mock.On("Topic", name)}
}

func (_c *MockPubsubClientGateway_Topic_Call) Run(run func(name string)) *MockPubsubClientGateway_Topic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockPubsubClientGateway_Topic_Call) Return(_a0 TopicGateway) *MockPubsubClientGateway_Topic_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewMockPubsubClientGateway interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPubsubClientGateway creates a new instance of MockPubsubClientGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPubsubClientGateway(t mockConstructorTestingTNewMockPubsubClientGateway) *MockPubsubClientGateway {
	mock := &MockPubsubClientGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
